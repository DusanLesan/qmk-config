name: Generate Firmware

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache qmk_firmware directory
        id: cache-qmk-firmware
        uses: actions/cache@v3
        with:
          path: '~/qmk_firmware'
          key: '~/qmk_firmware'
          restore-keys:
            '~/qmk_firmware'

      - name: Restore qmk_cli image cache if it exists
        id: cache-docker-qmk_cli
        uses: actions/cache@v3
        with:
          path: ci/cache/docker/qmk_cli
          key: cache-docker-qmk_cli

      - name: Update qmk_cli image cache if cache is missing
        if: steps.cache-docker-qmk_cli.outputs.cache-hit != 'true'
        run: docker pull qmkfm/qmk_cli && mkdir -p ci/cache/docker/qmk_cli && docker image save qmkfm/qmk_cli --output ./ci/cache/docker/qmk_cli/qmk_cli.tar

      - name: Use qmk_cli image cache if cache hit
        if: steps.cache-docker-qmk_cli.outputs.cache-hit == 'true'
        run: docker image load --input ./ci/cache/docker/qmk_cli/qmk_cli.tar

      - name: Run Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -v ~/qmk_firmware:/qmk_firmware \
            qmkfm/qmk_cli \
            /bin/bash -c "echo 'Running commands inside the container'; \
              qmk setup -y; \
              rm -rf /qmk_firmware/.git; \
              rm -rf /qmk_firmware/keyboards; \
              rm -rf /qmk_firmware/users; \
              cp -r /workspace/keyboards /qmk_firmware/; \
              qmk compile -kb splitkb/kyria/rev3 -km default -e CONVERT_TO=promicro_rp2040"

      - name: Set Release Date
        run: echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Create release and upload files
        uses: softprops/action-gh-release@v1
        with:
          name: ${{env.RELEASE_DATE}}
          tag_name: ${{env.RELEASE_DATE}}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: /home/runner/qmk_firmware/*.uf2
