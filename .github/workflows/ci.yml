# This is a basic workflow to help you get started with Actions

name: Generate Firmware

# Controls when the workflow will run
on:
  push:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - run: |
          python -m pip install --user qmk

      - name: Cache work dir
        uses: actions/cache@v2
        id: cache
        with:
          path: '~/qmk_firmware'
          key: '~/qmk_firmware'
          restore-keys:
            '~/qmk_firmware'

      - name: Setup
        run: |
          export QMK_HOME='~/qmk_firmware'
          if ${{ (steps.cache.outputs.cache-hit == 'true')}} == 'true';then
            ~/qmk_firmware/util/qmk_install.sh
          else
            qmk setup -y
            rm -rf ~/qmk_firmware/.git
            rm -rf ~/qmk_firmware/keyboards
            rm -rf ~/qmk_firmware/users
          fi

      - name: Build
        continue-on-error: true
        run: |
          export QMK_HOME='~/qmk_firmware'
          ls ~/qmk_firmware
          cp -r ~/work/qmk-config/qmk-config/keyboards ~/qmk_firmware/
          qmk compile -kb splitkb/kyria/rev3 -km default -e CONVERT_TO=promicro_rp2040

      - name: Set Release Date
        run: |
          echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

      - name: Package assets
        run: |
          mkdir -p ~/qmk_firmware/firmware
          find ~/qmk_firmware -maxdepth 1 -name "*.uf2" -exec mv '{}' ~/qmk_firmware/firmware \;

      - name: Create GitHub release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{env.RELEASE_DATE}}"
          title: ${{ env.ReleaseVersion }}
          prerelease: false
          files: |
            /home/runner/qmk_firmware/firmware/*
